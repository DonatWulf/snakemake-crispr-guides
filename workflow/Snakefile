# ----------------------------------------------------- #
# A Snakemake workflow for the design of small guide    #
# RNAs (sgRNAs) for CRISPR applications.                #
#                                                       #
# Author: Michael Jahn                                  #
# Date: 2023-04-04                                      #
# License: GPL v3 (for all 3rd party tools              #
# separate licenses may apply)                          #
# ----------------------------------------------------- #


# load rules
# -----------------------------------------------------
include: "rules/common.smk"


# load and print configuration
# -----------------------------------------------------
configfile: path.join(workflow.basedir, "../config/config.yml")
print_params(config)


# target rule
# -----------------------------------------------------
rule all:
    input:
        out("versions/log_env.txt"),
        out("module_logs/log.txt"),


# module to fetch genome from NCBI or Ensemble
# -----------------------------------------------------
rule get_genome:
    params:
        database=config["get_genome"]["database"],
        assembly=config["get_genome"]["assembly"],
        fasta=config["get_genome"]["fasta"],
        gff=config["get_genome"]["gff"],
    output:
        path=directory(out("get_genome")),
    conda:
        "envs/get_genome.yml"
    log:
        path=out("get_genome/log.txt"),
    script:
        "scripts/get_genome.py"


# module to combine all module log files to single log
# -----------------------------------------------------
rule module_logs:
    input:
        rules.get_genome.log.path,
    conda:
        "envs/basic.yml"
    log:
        path=out("module_logs/log.txt"),
    shell:
        "cat {input} >> {log.path}"


# module to fetch software versions from conda envs
# -----------------------------------------------------
rule versions:
    input:
        expand(
            "workflow/envs/{module}",
            module=listdir("workflow/envs/"),
        ),
    output:
        path=out("versions/log_packages.txt"),
    conda:
        "envs/basic.yml"
    log:
        path=out("versions/log_env.txt"),
    shell:
        "conda env export > {log.path};"
        "cat {input} >> {output.path}"
